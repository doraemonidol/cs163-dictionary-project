void inputData(TrieNode*& key, TrieNode*& def, string& curDatset, TrieNode*& fav, HistoryNode*& his, int& wordCount)
{
    key = def = fav = nullptr;
    his = nullptr;
    ifstream f(DATA_DIR + "fantastic4.txt");
    int tmp = 0;
    if (f.is_open()) {
        cout << "fantastic4 loaded\n";
        getline(f, curDatset);

        ifstream in(DATA_DIR + "favTrie.txt");
        if (in.is_open())
            FileToTrie(in, fav, tmp);
        cout << "favTrie loaded\n";
        in.close();

        in.open(DATA_DIR + "history.txt");
        if (in.is_open()) {
            inputHistory(in, his);
        }
        in.close();
        cout << "history loaded\n";

        in.open(DATA_DIR + "keyTrie.txt");
        if (in.is_open())
            FileToTrie(in, key, wordCount);
        else {
            FullDictTree dict = ChooseDataSet(key, def, curDatset, wordCount);
            key = dict.key;
            def = dict.def;
            in.close();
            return;
        }
        in.close();
        cout << "keyTrie loaded\n";
        

        in.open(DATA_DIR + "defTrie.txt");
        if (in.is_open())
            FileToTrie(in, def, tmp);
        else {
            FullDictTree dict = ChooseDataSet(key, def, curDatset, wordCount);
            key = dict.key;
            def = dict.def;
            in.close();
            return;
        }
        in.close();
        cout << "defTrie loaded\n";

        f.close();
    } else {
        f.close();
        ofstream o(DATA_DIR + "fantastic4.txt");
        o << DATASET_NAME[0] << endl;
        o.close();

        InitializeTrie(key, def, DATASET_NAME[0], wordCount);

        curDatset = DATASET_NAME[0];
    }
}
